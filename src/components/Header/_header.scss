.main-header {
    padding: 0.75rem 0;
    background: #f1f1f1;
    @include breakpoint(md) {
      padding: 1.25rem 0;
    }

    .container {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    nav {
        z-index: 4;
        position: absolute;
        top: 172px;
        bottom: 0;
        right: 0;
        left: 0;
        background: #f1f1f1;

        @include breakpoint(sm) {
          top: 164px;
        }

        ul {
            width: 100%;
            display: grid;
        }
        .divider {
          margin-bottom: 1rem;
          padding-bottom: 1rem;
          border-bottom: #ddd 1px dashed;
        }
        a {
            display: block;
            padding: 1rem;
            font-size: 1.5rem;
            color: #242430;
            &:hover {
                background-color: rgba(0,0,0,0.05);
                border-radius: 4px;
            }
        }
        h3 {
            font-size: 3rem;
            color: #888;
        }
        .social-links {
            padding: 0;
    
            ul {
                gap: 0;
    
                a {
                    padding: 1rem 8px 1rem 2.5rem;
                    background-position: 10px;
                }
            }
        }
    }
}
.logo {
    display: flex;
    align-content: center;
    color: #242430;
    img {
        max-width: 60px;
    }
    span {
        font-size: 2.5rem;
        margin-left: 10px;
    }
}

$hamburger-padding-x           : 15px !default;
$hamburger-padding-y           : 15px !default;
$hamburger-layer-width         : 40px !default;
$hamburger-layer-height        : 4px !default;
$hamburger-layer-spacing       : 6px !default;
$hamburger-layer-color         : #242430 !default;
$hamburger-layer-border-radius : 4px !default;
$hamburger-hover-opacity       : 0.7 !default;
$hamburger-active-layer-color  : $hamburger-layer-color !default;
$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter   : false !default;
$hamburger-hover-filter       : opacity(50%) !default;
$hamburger-active-hover-filter: $hamburger-hover-filter !default;
.hamburger {
    padding: $hamburger-padding-y $hamburger-padding-x;
    display: inline-block;
    z-index: 5;
    border-radius: 6px;
    cursor: pointer;
  
    transition-property: opacity, filter;
    transition-duration: 0.15s;
    transition-timing-function: linear;
  
    // Normalize (<button>)
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;
  
    &:hover {
      @if $hamburger-hover-use-filter == true {
        filter: $hamburger-hover-filter;
      }
      @else {
        opacity: $hamburger-hover-opacity;
      }
    }
  
    &.is-active {
        background: rgba(0,0,0,0.1);
      &:hover {
        @if $hamburger-hover-use-filter == true {
          filter: $hamburger-active-hover-filter;
        }
        @else {
          opacity: $hamburger-active-hover-opacity;
        }
      }
  
      .hamburger-inner,
      .hamburger-inner::before,
      .hamburger-inner::after {
        background-color: $hamburger-active-layer-color;
      }
    }
  }
  
  .hamburger-box {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
    display: inline-block;
    position: relative;
  }
  
  .hamburger-inner {
    display: block;
    top: 50%;
    margin-top: $hamburger-layer-height - 2;
  
    &,
    &::before,
    &::after {
      width: $hamburger-layer-width;
      height: $hamburger-layer-height;
      background-color: $hamburger-layer-color;
      border-radius: $hamburger-layer-border-radius;
      position: absolute;
      transition-property: transform;
      transition-duration: 0.15s;
      transition-timing-function: ease;
    }
  
    &::before,
    &::after {
      content: "";
      display: block;
    }
  
    &::before {
      top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
  
    &::after {
      bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
  }

  .hamburger--spin {
    .hamburger-inner {
      transition-duration: 0.22s;
      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

      &::before {
        transition: top 0.1s 0.25s ease-in,
                    opacity 0.1s ease-in;
      }

      &::after {
        transition: bottom 0.1s 0.25s ease-in,
                    transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
      }
    }

    &.is-active {
      .hamburger-inner {
        transform: rotate(225deg);
        transition-delay: 0.12s;
        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

        &::before {
          top: 0;
          opacity: 0;
          transition: top 0.1s ease-out,
                      opacity 0.1s 0.12s ease-out;
        }

        &::after {
          bottom: 0;
          transform: rotate(-90deg);
          transition: bottom 0.1s ease-out,
                      transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
        }
      }
    }
  }